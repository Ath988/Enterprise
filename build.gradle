plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	set('springCloudVersion', "2024.0.0")
}

allprojects{
	apply plugin: 'java'
	apply plugin: 'application'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'
	apply from: "${rootDir}/dependencies.gradle"

}
subprojects {
	group = 'com.bilgeadam'
	version = '0.0.1-SNAPSHOT'
	java {
		toolchain {
			languageVersion = languageVersion.set(JavaLanguageVersion.of(17))
		}
	}
	tasks.withType(JavaCompiler).tap{
		configureEach{
			options.encoding = UTF-8
		}
	}
}

allprojects{
	repositories{
		mavenCentral()
	}
	buildscript{
		repositories{
			mavenCentral()
		}
		dependencies{
			classpath("org.springframework.boot:spring-boot-gradle-plugin:3.4.1")
		}
	}
	dependencies{
		implementation libs.springBootStarterAmqp
		implementation libs.springBootStarterDataJpa
		implementation libs.springBootStarterSecurity
		implementation libs.jwt
		implementation libs.springBootStarterValidation
		implementation libs.springBootStarterWeb
		implementation libs.springCloudStarterOpenFeign
		implementation libs.springBootStarterWebsocket
		implementation libs.springCloudStarterGatewayMvc
		implementation libs.openapi
		implementation libs.openapiCommon
		compileOnly libs.lombok
		developmentOnly libs.springBootDevtools
		runtimeOnly libs.postgresql
		annotationProcessor libs.lombok
		testImplementation libs.springBootStarterTest
		testImplementation libs.openapiTest
		testImplementation libs.springRabbitTest
		testImplementation libs.springSecurityTest
		testRuntimeOnly libs.junitPlatformLauncher
		implementation libs.mapstruct
		annotationProcessor libs.mapstructProcessor
		implementation libs.apachePoi
		implementation libs.apachePoiOoxml
	}
	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}
	tasks.named('test') {
		useJUnitPlatform()
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}